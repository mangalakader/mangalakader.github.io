{"componentChunkName":"component---src-templates-blog-post-js","path":"/post/til-bookmarks-firefox-html-to-plain-file-and-manage-using-version-control/","result":{"data":{"markdownRemark":{"html":"<h2>Today I Learned</h2>\n<p>Long long time ago, I started using browser bookmarks and the burden of carrying around them system to system has been a pain. I hope, there are people like me, want to carry forward the legacy bookmarks to beyond.</p>\n<p>I'm not going to be giving the steps for exporting the bookmarks from firefox, as they are already straight forward. Still, if somebody needs help, please look <a href=\"https://support.mozilla.org/en-US/kb/export-firefox-bookmarks-to-backup-or-transfer\">here</a>.</p>\n<h2>SED to the rescue</h2>\n<p>SED - stream editor, popular choice of most of the sysadmins and hardcore developers. Once, you've exported, you'd have a html file in any destination based on your choice.</p>\n<p>In your terminal, use the following script to filter out only the <code>href</code> part from all those nasty large links:</p>\n<pre><code class=\"language-bash\">sed -r -e '/.* HREF=.*$/!d' -e 's/.* HREF=\"(.*)\\\" ADD_DATE.*$/\\1/g' {INPUT FILE NAME}.html | uniq > {OUTPUT FILE NAME}.txt\n</code></pre>\n<p>Let me breakdown the command</p>\n<ul>\n<li><code>sed</code> is the bash tool, that we'll be using</li>\n<li><code>-r</code> for extended regex,</li>\n<li><code>-e</code> for expression</li>\n<li><code>'/.* HREF=\"(.*)\\\" ADD_DATE.*$/!d'</code> Any line not matching the pattern will be deleted using the first expression</li>\n<li><code>'s/.* HREF=\"(.*)\\\" ADD_DATE.*$/\\1/g'</code> Any line matching the pattern will substitute the captured links in place</li>\n<li>Input File (HTML from the export)</li>\n<li><code>uniq</code> for deleting the duplicate links</li>\n<li><code>> {OUTPUT FILE}</code> - store the extracted text from html file</li>\n</ul>\n<p>Now, the output file can be managed with any VCS out there.</p>\n<h2>Improvements (December, 2020):</h2>\n<pre><code class=\"language-bash\">parallel --pipepart -a {INPUT FILE NAME}.html -j4 --roundrobin \\\nsed\\ -r\\ -e\\ \\'/.\\*\\ HREF\\=\\\"\\(.\\*\\)\\\\\\\"\\ ADD_DATE.\\*\\$/\\!d\\'\\ \n         -e\\ \\'s/.\\*\\ HREF\\=\\\"\\(.\\*\\)\\\\\\\"\\ ADD_DATE.\\*.\\*\\$/\\\\1/g\\' | \\\nuniq > {OUTPUT FILE NAME}.txt\n</code></pre>\n<blockquote>\n<p>After sometime, browser took quite sometime to export the bookmarks.html file which was around 50mb\nand sed took about 13 to 15 secs to process the whole html file</p>\n</blockquote>\n<ul>\n<li>The improvement requires a new package named <code>parallel</code> from GNU. (<code>sudo apt install parallel or directly download from the site</code>)</li>\n</ul>\n<p>Command breakdown:</p>\n<ul>\n<li><code>parallel</code> is the parallel job execution tool from GNU.</li>\n<li><code>--pipepart</code> tells the parallel job to chunk and pipe the file to the command</li>\n<li><code>-a</code> input file to the parallel command, here is the bookmarks.html file</li>\n<li><code>-j4 --roundrobin</code> 4 parallel jobs in roundrobin fashion</li>\n<li>\n<p>SED command here is shell-quoted using the parallel utility as follows:</p>\n<pre><code class=\"language-bash\">$ parallel --shellquote\nparallel: Warning: Input is read from the terminal. You either know what you\nparallel: Warning: are doing (in which case: YOU ARE AWESOME!) or you forgot\nparallel: Warning: ::: or :::: or to pipe data into parallel. If so\nparallel: Warning: consider going through the tutorial: man parallel_tutorial\nparallel: Warning: Press CTRL-D to exit.\n{PASTE the SED command from the above (before improvements)}\n{SHELL QUOTED OUTPUT STRING}\n</code></pre>\n</li>\n<li>Copy the shellquoted output string and use it along with parallel utility</li>\n</ul>\n<blockquote>\n<p>After using parallel, the time was reduced to 6 to 7 secs which is half the actual time taken.</p>\n</blockquote>","frontmatter":{"title":"TIL: Firefox Bookmarks Export - HTML to PLAIN File","date":"31 October, 2020","tags":["til","sed","firefox","bookmarks","linux","unix","script","bash","sh","parallel"]},"excerpt":"Today I Learned Long long time ago, I started using browser bookmarks and the burden of carrying around them system to system has been aâ€¦"}},"pageContext":{"slug":"/til-bookmarks-firefox-html-to-plain-file-and-manage-using-version-control/","prev":{"fields":{"slug":"/erlang-docs-on-elixir-iex-shell/"},"frontmatter":{"published":true}},"next":{"fields":{"slug":"/systemd-nspawn-container-musings-part-1/"},"frontmatter":{"published":true}}}},"staticQueryHashes":["63159454"]}