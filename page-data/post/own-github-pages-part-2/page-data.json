{"componentChunkName":"component---src-templates-blog-post-js","path":"/post/own-github-pages-part-2/","result":{"data":{"markdownRemark":{"html":"<h3>To Create your own template:</h3>\n<h4>Follow the directory structure:</h4>\n<pre class=\"container-fluid highlighter-rouge\">\nPROJECT_ROOT\\\n    ├── assets\n    │   ├── css\n    │   ├── fonts\n    │   │   └── bootstrap\n    │   ├── images\n    │   ├── js\n    ├── _includes &#10140;(<b>Reusable HTML Elements</b>)\n    ├── _layouts &#10140;(<b>Template elements</b>)\n    ├── _pages &#10140;(<b>Pages for Static Sites</b>)\n    ├── _posts &#10140;(<b>Blog Posts</b>)\n    ├── _sass &#10140;(<b>CSS in SASS mode</b>)\n       ├── bootstrap\n       │   └── mixins\n       └── minima\n</pre> \n<ul>\n<li>\n<p>For <em>pages to work, we need to define collections in `</em>config.yml` as below:\n<strong>Adding this will give us neat project directory by allowing us to organise the pages inside _pages directory instead of PROJECT ROOT.</strong>\nOne more major issue with having collections for pages, is that, it doesn't support pagination, and github pages doesn't support other paginate plugins,\nso, if you want to use pagination with collections, go for <strong><a href=\"https://github.com/luis-almeida/jPages\">jQuery based plugins</a></strong>:\n<br />\n<br /></p>\n<pre><code>collections:\npages:\n    output:  true\n    permalink:  /:path\n</code></pre>\n</li>\n<li>\n<p>After creating the directory structure, open the following folder <code>/var/lib/gems/{gem-version}/gems/minima-{minima-version}</code></p>\n<ol>\n<li>copy the files from <code>_includes</code> to <code>PROJECT_ROOT/_includes</code></li>\n<li>copy the files from <code>_layouts</code> to <code>PROJECT_ROOT/_layouts</code></li>\n<li>copy the files from <code>_sass</code> to <code>PROJECT_ROOT/_sass</code></li>\n<li>If you want social icons svg such as facebook, twitter, copy <code>assets/minima-social-icons.svg</code> to <code>PROJECT_ROOT/assets/images/</code></li>\n</ol>\n</li>\n<li>Next step, would be start creating our templates, by editing the files that we copied in above step.</li>\n<li>\n<p>Sometimes, we might need to list out files in a directory, there are many plugins available but Github Pages runs in <code>safe</code> mode, which means\nonly <a href=\"https://help.github.com/articles/configuring-jekyll-plugins/\">defaults plugins</a> will be allowed, otherwise github pages reports an error as unrecognized tag.\nThis is the code sample, that I have used in this website, which is using liquid, it can be customised according to your own requirements,\nIn Case you want to list based on extension of the file: <code>{% raw %}{% if file.extname == \".jpg\" %}{% endraw %}</code>\n{% highlight liquid%}\n{% raw %}\n{% for file in site.static_files %}\n{% if file.path contains \"/images/\" %}\n{{file.url}}<br>\n{% endif %}\n{% endfor %}\n{% endraw %}\n{% endhighlight %}\n<br /></p>\n<div class=\"jumbotron ref\">\n<h4>References :</h4>\n<ul>\n<li><a href=\"https://jekyllrb.com/docs/structure/\" target=\"_blank\">https://jekyllrb.com/docs/structure/</a></li>\n<li><a href=\"https://jekyllrb.com/tutorials/home/\" target=\"_blank\">https://jekyllrb.com/tutorials/home</a></li>\n<li><a href=\"https://help.shopify.com/themes/liquid\" target=\"_blank\">https://help.shopify.com/themes/liquid</a></li>\n<li><a href=\"https://github.com/luis-almeida/jPages\" target=\"_blank\">https://github.com/luis-almeida/jPages</a></li>\n</ul>\n</div>\n</li>\n</ul>","frontmatter":{"title":"Your Own Bootstrap Github Page Using Jekyll ? - Part 2","date":"04 April, 2018"},"excerpt":"To Create your own template: Follow the directory structure: For pages to work, we need to define collections in `config.yml` as below…"}},"pageContext":{"slug":"/own-github-pages-part-2/","prev":{"fields":{"slug":"/own-github-pages-part-1/"},"frontmatter":{"published":true}},"next":{"fields":{"slug":"/erlang-elixir-session-shell-cmd-history/"},"frontmatter":{"published":true}}}},"staticQueryHashes":["63159454"]}