{"componentChunkName":"component---src-templates-blog-js","path":"/blog/2","result":{"data":{"allMarkdownRemark":{"totalCount":12,"edges":[{"node":{"id":"e53728f3-e68d-56fc-8f41-591b3f72bfea","frontmatter":{"title":"Download Project Binaries using HTTPoison - Elixir","date":"08 September, 2018","comments":true},"fields":{"slug":"/download-binaries-using-httpoison-elixir-the-correct-way/"},"excerpt":"In my particular use case, I wanted a mix task, so I will be illustrating the use case with Mix Tasks. Feel free to try and explore different options. Mix Task: We all would have started using mix tasks, the moment we installed elixir in our system. The basic mix task that helped me my elixir journey is mix help. The first thing that I wanted to learn is how to create a simple mix task. I am not going to ellaborate on how to write a mix task, but rather focus on the main functionality…"}},{"node":{"id":"e0d4837f-458d-5bae-8be4-7eb2405060d3","frontmatter":{"title":"Add yourself to Sudoers - No {re-}typing password!","date":"08 August, 2018","comments":true},"fields":{"slug":"/add-yourself-to-sudoers/"},"excerpt":"I will be elaborating just the second way, because this doesn't involve me directly messing with the defaults and I feel it sane, safe & sound. View the Last Line in the /etc/sudoers file: The last line #includedir /etc/sudoers.d is an actual directory which will be included automatically by this file.\nLet's add ourself to sudoers, so we can stop typing password for sudo commands: Create a file with the username in /etc/sudoers.d, don't forget to use sudo when creating the file. Now add the…"}},{"node":{"id":"1a0b4117-1426-5b47-92dc-70bbd7059d3f","frontmatter":{"title":"Delete Saved Shell Cmd History in Erlang / Elixir","date":"30 July, 2018","comments":true},"fields":{"slug":"/erlang-elixir-session-shell-cmd-history/"},"excerpt":"To Enable erlang / elixir shell history across sessions: There are lot of tutorials out there illustrating how to enable persistent shell history in erlang / elixir, one such\nexample is found here , so I am not going to elaborate it here. What if you wanted to delete your shell history: There are not many examples as to how to delete them, once they saved. People have even suggested to disable the shell\nhistory and re-enable them, which do not help. The saved history is persisted even then. Let…"}},{"node":{"id":"3b93542b-b066-50eb-a500-72a38f65a7d6","frontmatter":{"title":"Your Own Bootstrap Github Page Using Jekyll ? - Part 2","date":"04 April, 2018","comments":true},"fields":{"slug":"/own-github-pages-part-2/"},"excerpt":"To Create your own template: Follow the directory structure: For pages to work, we need to define collections in `config.yml` as below:\nAdding this will give us neat project directory by allowing us to organise the pages inside _pages directory instead of PROJECT ROOT.\nOne more major issue with having collections for pages, is that, it doesn't support pagination, and github pages doesn't support other paginate plugins,\nso, if you want to use pagination with collections, go for jQuery based…"}},{"node":{"id":"112d1f9f-87b9-56cd-9ad5-564379759d32","frontmatter":{"title":"Your Own Bootstrap Github Page Using Jekyll ? - Part 1","date":"01 April, 2018","comments":true},"fields":{"slug":"/own-github-pages-part-1/"},"excerpt":"To setup Github: Login to your Github and create a new public repository with your Github Username.github.io Goto repository settings and enable the repository for rendering github pages.\n To Integrate Bootstrap: Jekyll is used by Github Pages and it has it's own default minima theme.  Jekyll supports only Sass, but bootstrap is using Less. If you want to customize themes based on bootstrap, then follow the below steps: Download the sass bootstrap file from the following url SASS BOOTSTRAP…"}}]}},"pageContext":{"limit":7,"skip":7,"numPages":2,"currentPage":2}},"staticQueryHashes":["63159454"]}