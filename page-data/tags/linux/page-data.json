{"componentChunkName":"component---src-templates-tag-js","path":"/tags/linux/","result":{"data":{"allMarkdownRemark":{"group":[{"fieldValue":"bash"},{"fieldValue":"bookmarks"},{"fieldValue":"containers"},{"fieldValue":"development"},{"fieldValue":"firefox"},{"fieldValue":"linux"},{"fieldValue":"nspawn"},{"fieldValue":"parallel"},{"fieldValue":"script"},{"fieldValue":"sed"},{"fieldValue":"sh"},{"fieldValue":"systemd"},{"fieldValue":"systemd-nspawn"},{"fieldValue":"til"},{"fieldValue":"unix"}],"edges":[{"node":{"id":"01a95da5-2f12-5ede-953c-6640edd8013f","frontmatter":{"title":"systemd-nspawn - Containerization - Part 2","date":"28 November, 2020","comments":true},"fields":{"slug":"/systemd-nspawn-container-musings-part-2/"},"excerpt":"Recap: In the last part of the series, we saw how to configure the network in host for containers and learnt how to pull images using machinectl. If you haven't gone through that first, please do so. Before Booting your container for the first time: I'm using an cloud based ubuntu image, as it provides cloud-init support, which lets me configure my container during the boot itself. I'm not going to go into the details of cloud-init, but I'll give you some idea about minimising full-blown cloud…"}},{"node":{"id":"875ad9cd-f8d2-5162-980b-0659ef83a5f5","frontmatter":{"title":"systemd-nspawn - Containerization - Part 1","date":"22 November, 2020","comments":true},"fields":{"slug":"/systemd-nspawn-container-musings-part-1/"},"excerpt":"What is systemd-nspawn? systemd is known as INIT system, which is used in many unix and linux distributions. systemd-nspawn is available as a part of default systemd package and if it is not available, install the following packages: systemd-container (MAIN) bridge-utils (OPTIONAL - For managing networks) systemd-nspawn can be used to run raw images or docker images without installing additional software tools and it is controlled by systemd, with the help of namespaces all the networks and logs…"}},{"node":{"id":"438c3e4d-0724-5c39-b71a-8cc61832d7c9","frontmatter":{"title":"TIL: Firefox Bookmarks Export - HTML to PLAIN File","date":"31 October, 2020","comments":true},"fields":{"slug":"/til-bookmarks-firefox-html-to-plain-file-and-manage-using-version-control/"},"excerpt":"Today I Learned Long long time ago, I started using browser bookmarks and the burden of carrying around them system to system has been a pain. I hope, there are people like me, want to carry forward the legacy bookmarks to beyond. I'm not going to be giving the steps for exporting the bookmarks from firefox, as they are already straight forward. Still, if somebody needs help, please look here. SED to the rescue SED - stream editor, popular choice of most of the sysadmins and hardcore developers…"}},{"node":{"id":"e0d4837f-458d-5bae-8be4-7eb2405060d3","frontmatter":{"title":"Add yourself to Sudoers - No {re-}typing password!","date":"08 August, 2018","comments":true},"fields":{"slug":"/add-yourself-to-sudoers/"},"excerpt":"I will be elaborating just the second way, because this doesn't involve me directly messing with the defaults and I feel it sane, safe & sound. View the Last Line in the /etc/sudoers file: The last line #includedir /etc/sudoers.d is an actual directory which will be included automatically by this file.\nLet's add ourself to sudoers, so we can stop typing password for sudo commands: Create a file with the username in /etc/sudoers.d, don't forget to use sudo when creating the file. Now add the…"}}]}},"pageContext":{"tag":"linux"}},"staticQueryHashes":["63159454"]}