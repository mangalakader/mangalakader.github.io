{"version":3,"sources":["webpack:///./src/templates/blog_post.js","webpack:///./src/components/BannerLanding.js","webpack:///./src/components/seo.js"],"names":["bannerTitle","props","data","markdownRemark","frontmatter","title","BlogPost","pageContext","prev","next","description","excerpt","content","date","id","className","dangerouslySetInnerHTML","__html","html","align","tags","map","tag","i","to","string","replace","key","published","fields","slug","rel","query","BannerLanding","SEO","lang","meta","site","useStaticQuery","metaDescription","siteMetadata","htmlAttributes","titleTemplate","name","property","author","concat","defaultProps"],"mappings":"6FAAA,sHA2EMA,EAAc,SAAAC,GAAK,OACvB,4BAAKA,EAAMC,KAAKC,eAAeC,YAAYC,QAG9BC,UArEE,SAAAL,GAAU,IAAD,EACDA,EAAMM,YAArBC,EADgB,EAChBA,KAAMC,EADU,EACVA,KACd,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEJ,MAAOJ,EAAMC,KAAKC,eAAeC,YAAYC,MAC7CK,YAAaT,EAAMC,KAAKC,eAAeQ,UAEzC,kBAAC,IAAD,CACEN,MAAOL,EAAYC,GACnBW,QAASX,EAAMC,KAAKC,eAAeC,YAAYS,OAGjD,yBAAKC,GAAG,QACN,6BAASA,GAAG,OACV,yBAAKC,UAAU,SACb,yBACEC,wBAAyB,CACvBC,OAAQhB,EAAMC,KAAKC,eAAee,QAGxC,yBAAKH,UAAU,QAAQI,MAAM,UAC3B,sCACGlB,EAAMC,KAAKC,eAAeC,YAAYgB,KAAKC,KAAI,SAACC,EAAKC,GAAN,OAAa,oCAC7D,kBAAC,OAAD,CAAMC,GAAI,UA5BPC,EA4B2BH,EA3BnCG,EAAOC,QAAQ,IAAK,MA2BqBC,IAAKJ,EAAGR,UAAU,UACnDO,GAF0D,MA3B1D,IAAAG,SAsCT,yBAAKV,UAAU,QAAQI,MAAM,UAC3B,wBAAIJ,UAAU,WACZ,4BACGP,GAAQA,EAAKJ,YAAYwB,WACxB,kBAAC,OAAD,CACEJ,GAAE,QAAUhB,EAAKqB,OAAOC,KACxBC,IAAI,OACJhB,UAAU,gCAHZ,iBASJ,4BACGN,GAAQA,EAAKL,YAAYwB,WACxB,kBAAC,OAAD,CACEJ,GAAE,QAAUf,EAAKoB,OAAOC,KACxBC,IAAI,OACJhB,UAAU,kCAHZ,qBAsBT,IAAMiB,EAAK,a,kCCjFlB,yBAeeC,IAbO,SAAAhC,GAAK,OACzB,6BAASa,GAAG,SAASC,UAAU,UAC7B,yBAAKA,UAAU,SACb,4BAAQA,UAAU,SAChB,4BAAKd,EAAMI,QAEb,yBAAKU,UAAU,WACb,2BAAId,EAAMW,c,kCCTlB,0DAYA,SAASsB,EAAT,GAAkD,IAAnCxB,EAAkC,EAAlCA,YAAayB,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAM/B,EAAS,EAATA,MAC9BgC,EAASC,yBAAe,YAAxBD,KAcFE,EAAkB7B,GAAe2B,EAAKG,aAAa9B,YAEzD,OACE,kBAAC,IAAD,CACE+B,eAAgB,CACdN,QAEF9B,MAAOA,EACPqC,cAAa,QAAUL,EAAKG,aAAanC,MACzC+B,KAAM,CACJ,CACEO,KAAK,cACL/B,QAAS2B,GAEX,CACEK,SAAS,WACThC,QAASP,GAEX,CACEuC,SAAS,iBACThC,QAAS2B,GAEX,CACEK,SAAS,UACThC,QAAQ,WAEV,CACE+B,KAAK,eACL/B,QAAQ,WAEV,CACE+B,KAAK,kBACL/B,QAASyB,EAAKG,aAAaK,QAE7B,CACEF,KAAK,gBACL/B,QAASP,GAEX,CACEsC,KAAK,sBACL/B,QAAS2B,IAEXO,OAAOV,KAKfF,EAAIa,aAAe,CACjBZ,KAAK,KACLC,KAAM,GACN1B,YAAY,IAUCwB","file":"component---src-templates-blog-post-js-4a6ac4bec569cecd3fa9.js","sourcesContent":["import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport BannerLanding from \"../components/BannerLanding\";\n\nconst Sluggify = string => {\n  return string.replace(' ', '-');\n}\n\nconst BlogPost = props => {\n  const { prev, next } = props.pageContext;\n  return (\n    <Layout>\n      <SEO\n        title={props.data.markdownRemark.frontmatter.title}\n        description={props.data.markdownRemark.excerpt}\n      />\n      <BannerLanding\n        title={bannerTitle(props)}\n        content={props.data.markdownRemark.frontmatter.date}\n      />\n\n      <div id=\"main\">\n        <section id=\"one\">\n          <div className=\"inner\">\n            <div\n              dangerouslySetInnerHTML={{\n                __html: props.data.markdownRemark.html\n              }}\n            />\n          <div className=\"inner\" align=\"center\">\n            <h6>Tags:&nbsp;&nbsp;\n              {props.data.markdownRemark.frontmatter.tags.map((tag, i) => (<>\n              <Link to={\"/tags/\" + Sluggify(tag)} key={i} className=\"button\">\n                {tag}\n              </Link>\n                &nbsp;&nbsp;\n              </>\n            ))}\n            </h6>\n          </div>\n          </div>\n        </section>\n        <div className=\"inner\" align=\"center\">\n          <ul className=\"actions\">\n            <li>\n              {prev && prev.frontmatter.published && (\n                <Link\n                  to={`/post${prev.fields.slug}`}\n                  rel=\"prev\"\n                  className=\"button special fit text-left\"\n                >\n                  ← Prev. Post\n                </Link>\n              )}\n            </li>\n            <li>\n              {next && next.frontmatter.published && (\n                <Link\n                  to={`/post${next.fields.slug}`}\n                  rel=\"next\"\n                  className=\"button special fit align-right\"\n                >\n                  Next Post →\n                </Link>\n              )}\n            </li>\n          </ul>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nconst bannerTitle = props => (\n  <h6>{props.data.markdownRemark.frontmatter.title}</h6>\n);\n\nexport default BlogPost;\n\nexport const query = graphql`\n  query($slug: String) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        date(formatString: \"DD MMMM, YYYY\")\n        tags\n      }\n      excerpt\n    }\n  }\n`;\n","import React from 'react'\n\nconst BannerLanding = props => (\n  <section id=\"banner\" className=\"style2\">\n    <div className=\"inner\">\n      <header className=\"major\">\n        <h1>{props.title}</h1>\n      </header>\n      <div className=\"content\">\n        <p>{props.content}</p>\n      </div>\n    </div>\n  </section>\n)\n\nexport default BannerLanding\n","/**\nSEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *   *\n *    * See: https://www.gatsbyjs.org/docs/use-static-query/\n *     */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}