{"version":3,"sources":["webpack:///./src/templates/tag.js","webpack:///./src/components/BannerLanding.js","webpack:///./src/components/seo.js"],"names":["Tag","props","title","pageContext","tag","content","obj","data","allMarkdownRemark","group","map","object","fieldValue","id","className","edges","i","node","key","to","fields","slug","src","Math","floor","random","alt","frontmatter","date","excerpt","md","query","BannerLanding","SEO","description","lang","meta","site","useStaticQuery","metaDescription","siteMetadata","htmlAttributes","titleTemplate","name","property","author","concat","defaultProps"],"mappings":"2FAAA,sHA8DeA,UAdH,SAAAC,GACV,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAO,iBAAmBD,EAAME,YAAYC,MACjD,kBAAC,IAAD,CACEF,MAAO,UAAYD,EAAME,YAAYC,IACrCC,QAAS,qBAVJC,EAU+BL,EAAMM,KAAKC,kBAAkBC,MAThEH,EAAII,KAAI,SAAAC,GAAM,MAAI,IAAMA,EAAOC,iBAYlC,yBAAKC,GAAG,QAnDH,SAAAZ,GACT,OACE,6BAASY,GAAG,MAAMC,UAAU,cACzBb,EAAMM,KAAKC,kBAAkBO,MAAML,KAAI,WAAWM,GAAX,IAAGC,EAAH,EAAGA,KAAH,OACtC,6BAASC,IAAKD,EAAKJ,IACjB,kBAAC,OAAD,CAAMM,GAAI,SAAWF,EAAKG,OAAOC,KAAMP,UAAU,SAC/C,yBACEQ,IACE,oCACAC,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAM,MAExCE,IAAKT,EAAKU,YAAYzB,SAG1B,yBAAKY,UAAU,WACb,yBAAKA,UAAU,SACb,4BAAQA,UAAU,SAChB,4BAAKG,EAAKU,YAAYzB,OACtB,8BAAOe,EAAKU,YAAYC,OAE1B,2BACE,+BAAQX,EAAKY,UAEf,wBAAIf,UAAU,WACZ,4BACE,kBAAC,OAAD,CAAMK,GAAI,QAAUF,EAAKG,OAAOC,KAAMP,UAAU,UAAhD,uBA0BIgB,CAAG7B,KAbZ,IAAAK,GAoBN,IAAMyB,EAAK,c,kCChElB,yBAeeC,IAbO,SAAA/B,GAAK,OACzB,6BAASY,GAAG,SAASC,UAAU,UAC7B,yBAAKA,UAAU,SACb,4BAAQA,UAAU,SAChB,4BAAKb,EAAMC,QAEb,yBAAKY,UAAU,WACb,2BAAIb,EAAMI,c,kCCTlB,0DAYA,SAAS4B,EAAT,GAAkD,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMlC,EAAS,EAATA,MAC9BmC,EAASC,yBAAe,YAAxBD,KAcFE,EAAkBL,GAAeG,EAAKG,aAAaN,YAEzD,OACE,kBAAC,IAAD,CACEO,eAAgB,CACdN,QAEFjC,MAAOA,EACPwC,cAAa,QAAUL,EAAKG,aAAatC,MACzCkC,KAAM,CACJ,CACEO,KAAK,cACLtC,QAASkC,GAEX,CACEK,SAAS,WACTvC,QAASH,GAEX,CACE0C,SAAS,iBACTvC,QAASkC,GAEX,CACEK,SAAS,UACTvC,QAAQ,WAEV,CACEsC,KAAK,eACLtC,QAAQ,WAEV,CACEsC,KAAK,kBACLtC,QAASgC,EAAKG,aAAaK,QAE7B,CACEF,KAAK,gBACLtC,QAASH,GAEX,CACEyC,KAAK,sBACLtC,QAASkC,IAEXO,OAAOV,KAKfH,EAAIc,aAAe,CACjBZ,KAAK,KACLC,KAAM,GACNF,YAAY,IAUCD","file":"component---src-templates-tag-js-237e43e4c626d119ddd3.js","sourcesContent":["import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport BannerLanding from \"../components/BannerLanding\";\n\nconst md = props => {\n  return (\n    <section id=\"one\" className=\"spotlights\">\n      {props.data.allMarkdownRemark.edges.map(({ node }, i) => (\n        <section key={node.id}>\n          <Link to={\"/post/\" + node.fields.slug} className=\"image\">\n            <img\n              src={\n                \"https://picsum.photos/600?random=\" +\n                Math.floor(Math.random() * Math.floor(10000))\n              }\n              alt={node.frontmatter.title}\n            />\n          </Link>\n          <div className=\"content\">\n            <div className=\"inner\">\n              <header className=\"major\">\n                <h5>{node.frontmatter.title}</h5>\n                <span>{node.frontmatter.date}</span>\n              </header>\n              <p>\n                <small>{node.excerpt}</small>\n              </p>\n              <ul className=\"actions\">\n                <li>\n                  <Link to={\"/post\" + node.fields.slug} className=\"button\">\n                    Learn more\n                  </Link>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </section>\n      ))}\n    </section>\n  );\n};\n\nconst Tags = obj => {\n  return obj.map(object => ' ' + object.fieldValue);\n};\n\nconst Tag = props => {\n  return (\n    <Layout>\n      <SEO title={\"Blog | Tags | \" + props.pageContext.tag} />\n      <BannerLanding\n        title={\"Tags - \" + props.pageContext.tag}\n        content={\"Tagged along with\" + Tags(props.data.allMarkdownRemark.group)}\n      />\n\n      <div id=\"main\">{md(props)}</div>\n    </Layout>\n  );\n};\n\nexport default Tag;\n\nexport const query = graphql`\n  query($tag: [String!]) {\n    allMarkdownRemark(\n      filter: { frontmatter: { published: { eq: true }, tags: { in: $tag } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      group(field: frontmatter___tags) {\n        fieldValue\n      }\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n            comments\n          }\n          fields {\n            slug\n          }\n          excerpt(pruneLength: 500)\n        }\n      }\n    }\n  }\n`;\n","import React from 'react'\n\nconst BannerLanding = props => (\n  <section id=\"banner\" className=\"style2\">\n    <div className=\"inner\">\n      <header className=\"major\">\n        <h1>{props.title}</h1>\n      </header>\n      <div className=\"content\">\n        <p>{props.content}</p>\n      </div>\n    </div>\n  </section>\n)\n\nexport default BannerLanding\n","/**\nSEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *   *\n *    * See: https://www.gatsbyjs.org/docs/use-static-query/\n *     */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}